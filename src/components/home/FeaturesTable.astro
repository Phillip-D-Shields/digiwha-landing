---
interface Feature {
  id: string;
  name: string;
  description: string;
}

const { features } = Astro.props as { features: Feature[] };
---

<section class="py-16 sm:py-20">
  <div class="mx-auto max-w-5xl px-4 sm:px-6 lg:px-8">
    <h2 class="text-3xl font-medium tracking-tight sm:text-4xl mb-10">Expertise</h2>

    <div class="overflow-x-auto rounded-2xl shadow-sm border border-primary-900/10 dark:border-primary-300/10">
      <table class="min-w-full divide-y divide-primary-900/10 dark:divide-primary-300/10">
        <thead class="bg-primary-50 dark:bg-primary-900/30">
          <tr>
            <th
              scope="col"
              class="px-6 py-4 text-left text-sm font-semibold text-primary-900 dark:text-primary-100"
            >
              Service
            </th>
            <th
              scope="col"
              class="px-6 py-4 text-left text-sm font-semibold text-primary-900 dark:text-primary-100"
            >
              Description
            </th>
          </tr>
        </thead>
        <tbody class="divide-y divide-primary-900/10 dark:divide-primary-300/10">
          {features.map((feature, i) => (
            <tr
              id={feature.id}
              class={i % 2 === 0
                ? "bg-white dark:bg-primary-900/10"
                : "bg-primary-50 dark:bg-primary-900/20"}
            >
              <td class="px-6 py-4 text-sm font-medium text-primary-900 dark:text-primary-100 align-top">
                {feature.name}
              </td>
              <td class="px-6 py-4 text-sm text-primary-950/70 dark:text-primary-200/70 leading-relaxed">
                {feature.description}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>
</section>
